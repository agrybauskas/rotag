#!/usr/bin/perl

use strict;
use warnings;

use lib "../../lib"
use Constants qw( $SIG_FIGS );
use ConnectAtoms qw( create_box );
use PDBxParser qw( obtain_atom_site );

use lib "../lib";
use Utils qw( select_atom_data );

#
# Unit test: ConnectAtoms::create_box.
#
# Creates smallest possible box that surrounds all selected atoms.
#
# Example: ./create_box example.cif
#

my ( $atom_specifier, $pdbx_file ) = @ARGV;

my $atom_site = obtain_atom_site( $pdbx_file );

# In Jmol, prints out atom coordinates.
print( "data \"model\"\n" );
print( scalar( keys %{ $atom_site } ), "\n" );
print( "testing\n" );

for my $atom_id ( sort { $a <=> $b } keys %{ $atom_site } ) {
    printf( "$atom_site->{$atom_id}{\"type_symbol\"}" .
            "\t$SIG_FIG\t$SIG_FIG\t$SIG_FIG\n",
            $atom_site->{$atom_id}{"Cartn_x"},
            $atom_site->{$atom_id}{"Cartn_y"},
            $atom_site->{$atom_id}{"Cartn_z"} );
}

print( "end \"model\"\n" );

# In Jmol, generates box around the molecule.
my $atom_data =
    select_atom_data( $pdbx_file, $atom_specifier, "Cartn_x,Cartn_y,Cartn_z" );

my $boundary_box = create_box( $atom_data );

print( "draw line1",
       "{$boundary_box->[1], $boundary_box->[2], $boundary_box->[5]}",
       "{$boundary_box->[1], $boundary_box->[2], $boundary_box->[4]};",
       "draw line2",
       "{$boundary_box->[1], $boundary_box->[2], $boundary_box->[5]}",
       "{$boundary_box->[1], $boundary_box->[3], $boundary_box->[5]};",
       "draw line3",
       "{$boundary_box->[1], $boundary_box->[2], $boundary_box->[5]}",
       "{$boundary_box->[0], $boundary_box->[2], $boundary_box->[5]};",
       "draw line4",
       "{$boundary_box->[0], $boundary_box->[3], $boundary_box->[5]}",
       "{$boundary_box->[0], $boundary_box->[3], $boundary_box->[4]};",
       "draw line5",
       "{$boundary_box->[0], $boundary_box->[3], $boundary_box->[5]}",
       "{$boundary_box->[0], $boundary_box->[2], $boundary_box->[5]};",
       "draw line6",
       "{$boundary_box->[0], $boundary_box->[3], $boundary_box->[5]}",
       "{$boundary_box->[1], $boundary_box->[3], $boundary_box->[5]};",
       "draw line7",
       "{$boundary_box->[0], $boundary_box->[2], $boundary_box->[4]}",
       "{$boundary_box->[0], $boundary_box->[2], $boundary_box->[5]};",
       "draw line8",
       "{$boundary_box->[0], $boundary_box->[2], $boundary_box->[4]}",
       "{$boundary_box->[0], $boundary_box->[3], $boundary_box->[4]};",
       "draw line9",
       "{$boundary_box->[0], $boundary_box->[2], $boundary_box->[4]}",
       "{$boundary_box->[1], $boundary_box->[2], $boundary_box->[4]};",
       "draw line10",
       "{$boundary_box->[1], $boundary_box->[3], $boundary_box->[4]}",
       "{$boundary_box->[1], $boundary_box->[3], $boundary_box->[5]};",
       "draw line11",
       "{$boundary_box->[1], $boundary_box->[3], $boundary_box->[4]}",
       "{$boundary_box->[1], $boundary_box->[2], $boundary_box->[4]};",
       "draw line12",
       "{$boundary_box->[1], $boundary_box->[3], $boundary_box->[4]}",
       "{$boundary_box->[0], $boundary_box->[3], $boundary_box->[4]};" );
