#!/usr/bin/perl

use strict;
use warnings;

use Data::Dumper;
use Getopt::Long qw( :config no_ignore_case );

use BondParameters qw( bendable_angles
                       rotatable_bonds
                       stretchable_bonds );
use BondProperties qw( hybridization );
use ConnectAtoms qw( assign_hetatoms
                     connect_atoms );
use ForceField::Parameters;
use PDBxParser qw( obtain_atom_site
                   obtain_struct_conn );
use SidechainModels qw( rotation_translation );

$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Deepcopy = 1;
$Data::Dumper::Deparse = 1;

#
# Test tool: dump_cif_structure
# Example: ./dump_cif_structure structure.cif
#

my %options;

my $is_connected = 0;
my $is_hybridized = 0;
my $include_heteroatoms = 0;
my $include_struct_conn = 0;
my $apply_rotation_only = 0;
my $apply_length_translation_only = 0;
my $apply_angle_bending_only = 0;

GetOptions(
    "c" => sub { $is_connected = 1 },
    "h" => sub { $is_hybridized = 1 },
    "H" => sub { $include_heteroatoms = 1 },
    "S" => sub { $include_struct_conn = 1 },
    "r" => sub { $apply_rotation_only = 1 },
    "l" => sub { $apply_length_translation_only = 1 },
    "a" => sub { $apply_angle_bending_only = 1 }
) or die "Error in command line argument.";

@ARGV = ( "-" ) unless @ARGV;

my $parameters = Parameters->new();

my $atom_site;
my $struct_conn;

foreach my $pdbx_file ( @ARGV ) {
    $atom_site = obtain_atom_site( $pdbx_file );
    $struct_conn = obtain_struct_conn( $pdbx_file );

    if( $is_connected ) {
        connect_atoms( $parameters, $atom_site );
    }

    if( $is_hybridized ) {
        hybridization( $parameters, $atom_site );
    }

    if( $is_connected && defined $struct_conn && %{ $struct_conn }  ) {
        assign_hetatoms( $parameters, $atom_site, $struct_conn );
    }

    bendable_angles( $parameters, $atom_site,
                     { 'include_hetatoms' => $include_heteroatoms } )
        if $apply_angle_bending_only;
    rotatable_bonds( $parameters, $atom_site,
                     { 'include_hetatoms' => $include_heteroatoms } )
        if $apply_rotation_only;
    stretchable_bonds( $parameters, $atom_site,
                       { 'include_hetatoms' => $include_heteroatoms } )
        if $apply_length_translation_only;

    if( $apply_rotation_only || $apply_length_translation_only ||
        $apply_angle_bending_only ) {
        rotation_translation( $parameters, $atom_site );
    }

    if( $include_struct_conn ) {
        my $cif_dump =
            Dumper( { '_atom_site' => $atom_site,
                      '_struct_conn' => $struct_conn } );
        $cif_dump =~ s/\$VAR[0..9]*.*=\s*//g;
        $cif_dump =~ s/};/}/g;
        print( $cif_dump );
    } else {
        my $cif_dump_structure = Dumper( $atom_site );
        $cif_dump_structure =~ s/\$VAR[0..9]*.*=\s*//g;
        $cif_dump_structure =~ s/};/}/g;
        print( $cif_dump_structure );
    }
}
