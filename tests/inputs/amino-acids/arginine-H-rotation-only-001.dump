{
  '2165' => {
    'B_iso_or_equiv' => '48.51',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '39.274',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-16.345',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '34.147',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'N',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'connections' => [
      '2166',
      '2177',
      '2176'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2165',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'N',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'N'
  },
  '2166' => {
    'B_iso_or_equiv' => '51.12',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '39.567',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-16.445',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '32.729',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'CA',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'connections' => [
      '2167',
      '2178',
      '2165',
      '2169'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2166',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'CA',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'C'
  },
  '2167' => {
    'B_iso_or_equiv' => '50.89',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '40.085',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-17.842',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '32.455',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'C',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'connections' => [
      '2166',
      '2168'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp2',
    'id' => '2167',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'C',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'C'
  },
  '2168' => {
    'B_iso_or_equiv' => '46.54',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '40.821',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-18.393',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '33.263',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'O',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'connections' => [
      '2167'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp2',
    'id' => '2168',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'O',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'O'
  },
  '2169' => {
    'B_iso_or_equiv' => '52.65',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '40.608',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-15.421',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '32.283',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'CB',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'connections' => [
      '2166',
      '2179',
      '2170',
      '2180'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2169',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'CB',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'C'
  },
  '2170' => {
    'B_iso_or_equiv' => '67.54',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '40.242',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-13.991',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '32.555',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'CG',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '1.15061866623249'
        ],
        [
          '0.729334370778236'
        ],
        [
          '2.15688781825085'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2169',
      '2181',
      '2182',
      '2171'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2170',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'CG',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'C'
  },
  '2171' => {
    'B_iso_or_equiv' => '74.43',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '41.178',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-13.059',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '31.810',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'CD',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.308820861409913'
        ],
        [
          '-1.38890833929118'
        ],
        [
          '2.0256446629667'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2170',
      '2172',
      '2183',
      '2184'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2171',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'CD',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'C'
  },
  '2172' => {
    'B_iso_or_equiv' => '81.60',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '41.028',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-13.237',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '30.370',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'NE',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '-1.22666902542245'
        ],
        [
          '0.606293373707583'
        ],
        [
          '2.02193680590354'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2185',
      '2173',
      '2171'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp2',
    'id' => '2172',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'NE',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'N'
  },
  '2173' => {
    'B_iso_or_equiv' => '95.46',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '41.836',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-12.708',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '29.457',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'CZ',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.443092206324221',
          '-0.310634367537643',
          '-0.84093732608276',
          '0'
        ],
        [
          '0.896476043569896',
          '0.15353412760957',
          '0.415641642481157',
          '3.5527136788005e-15'
        ],
        [
          '-2.7148422399037e-16',
          '-0.938047739384119',
          '0.346506044155572',
          '1.5164910154696'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi4'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.190333109253736'
        ],
        [
          '-1.07798152054146'
        ],
        [
          '2.21235240160625'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2175',
      '2172',
      '2174'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp2',
    'id' => '2173',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'CZ',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'C'
  },
  '2174' => {
    'B_iso_or_equiv' => '97.02',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '42.859',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-11.949',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '29.829',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'NH1',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.443092206324221',
          '-0.310634367537643',
          '-0.84093732608276',
          '0'
        ],
        [
          '0.896476043569896',
          '0.15353412760957',
          '0.415641642481157',
          '3.5527136788005e-15'
        ],
        [
          '-2.7148422399037e-16',
          '-0.938047739384119',
          '0.346506044155572',
          '1.5164910154696'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi4'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.388280941282517'
        ],
        [
          '-2.26226648796226'
        ],
        [
          '1.64730393312215'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2173',
      '2186',
      '2187'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp2',
    'id' => '2174',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'NH1',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'N'
  },
  '2175' => {
    'B_iso_or_equiv' => '100.15',
    'B_iso_or_equiv_esd' => '?',
    'Cartn_x' => '41.616',
    'Cartn_x_esd' => '?',
    'Cartn_y' => '-12.934',
    'Cartn_y_esd' => '?',
    'Cartn_z' => '28.168',
    'Cartn_z_esd' => '?',
    'auth_asym_id' => 'A',
    'auth_atom_id' => 'NH2',
    'auth_comp_id' => 'ARG',
    'auth_seq_id' => '360',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.443092206324221',
          '-0.310634367537643',
          '-0.84093732608276',
          '0'
        ],
        [
          '0.896476043569896',
          '0.15353412760957',
          '0.415641642481157',
          '3.5527136788005e-15'
        ],
        [
          '-2.7148422399037e-16',
          '-0.938047739384119',
          '0.346506044155572',
          '1.5164910154696'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi4'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.176299725522689'
        ],
        [
          '-0.971635440622039'
        ],
        [
          '3.53503549873376'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2173',
      '2188',
      '2189'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp2',
    'id' => '2175',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'NH2',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '1.00',
    'occupancy_esd' => '?',
    'pdbx_PDB_ins_code' => '?',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '?',
    'type_symbol' => 'N'
  },
  '2176' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '39.703',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-15.482',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '34.480',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'connections' => [
      '2165'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2176',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'H',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2177' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '39.680',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-17.167',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '34.594',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'connections' => [
      '2165'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2177',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'H2',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2178' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '38.674',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-16.271',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '32.165',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'connections' => [
      '2166'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2178',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HA',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2179' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '40.748',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-15.519',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '31.227',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.0415943341757696'
        ],
        [
          '-1.01401836859477'
        ],
        [
          '1.86501411777952'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2169'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2179',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HB2',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2180' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '41.522',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-15.620',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '32.802',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.899026275545133'
        ],
        [
          '0.470951280980774'
        ],
        [
          '1.86492242380803'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2169'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2180',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HB3',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2181' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '40.318',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-13.800',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '33.605',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.963144491227482'
        ],
        [
          '0.303302165836747'
        ],
        [
          '1.85466586888768'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2170'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2181',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HG2',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2182' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '39.238',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-13.815',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '32.229',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.744503448618211'
        ],
        [
          '0.682695664491874'
        ],
        [
          '1.85437138801255'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2170'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2182',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HG3',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2183' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '40.944',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-12.047',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '32.068',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.0669688632755197'
        ],
        [
          '-1.00892752255747'
        ],
        [
          '1.86726790407205'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2171'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2183',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HD2',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2184' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '42.187',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-13.277',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '32.090',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.841486867337537'
        ],
        [
          '0.559050362979324'
        ],
        [
          '1.86772817715832'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2171'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2184',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HD3',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2185' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '40.333',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-13.746',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '30.076',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.443092206324221',
          '-0.310634367537643',
          '-0.84093732608276',
          '0'
        ],
        [
          '0.896476043569896',
          '0.15353412760957',
          '0.415641642481157',
          '3.5527136788005e-15'
        ],
        [
          '-2.7148422399037e-16',
          '-0.938047739384119',
          '0.346506044155572',
          '1.5164910154696'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi4'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.139688104416244'
        ],
        [
          '0.793355078965449'
        ],
        [
          '1.88250496736777'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2172'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2185',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HE',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2186' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '43.410',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-11.588',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '29.201',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.443092206324221',
          '-0.310634367537643',
          '-0.84093732608276',
          '0'
        ],
        [
          '0.896476043569896',
          '0.15353412760957',
          '0.415641642481157',
          '3.5527136788005e-15'
        ],
        [
          '-2.7148422399037e-16',
          '-0.938047739384119',
          '0.346506044155572',
          '1.5164910154696'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi4'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.517823258050903'
        ],
        [
          '-2.9984147571645'
        ],
        [
          '2.16654425697694'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2174'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2186',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HH11',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2187' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '43.009',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-11.789',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '30.712',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.443092206324221',
          '-0.310634367537643',
          '-0.84093732608276',
          '0'
        ],
        [
          '0.896476043569896',
          '0.15353412760957',
          '0.415641642481157',
          '3.5527136788005e-15'
        ],
        [
          '-2.7148422399037e-16',
          '-0.938047739384119',
          '0.346506044155572',
          '1.5164910154696'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi4'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.393746141810126'
        ],
        [
          '-2.33825506446073'
        ],
        [
          '0.740670121804186'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2174'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2187',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HH12',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2188' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '42.169',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-12.572',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '27.542',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.443092206324221',
          '-0.310634367537643',
          '-0.84093732608276',
          '0'
        ],
        [
          '0.896476043569896',
          '0.15353412760957',
          '0.415641642481157',
          '3.5527136788005e-15'
        ],
        [
          '-2.7148422399037e-16',
          '-0.938047739384119',
          '0.346506044155572',
          '1.5164910154696'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi4'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.306585834512127'
        ],
        [
          '-1.70955776900196'
        ],
        [
          '4.05197376108503'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2175'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2188',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HH21',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  },
  '2189' => {
    'B_iso_or_equiv' => '.',
    'B_iso_or_equiv_esd' => '.',
    'Cartn_x' => '40.913',
    'Cartn_x_esd' => '.',
    'Cartn_y' => '-13.451',
    'Cartn_y_esd' => '.',
    'Cartn_z' => '27.910',
    'Cartn_z_esd' => '.',
    'auth_asym_id' => '.',
    'auth_atom_id' => '.',
    'auth_comp_id' => '.',
    'auth_seq_id' => '.',
    'conformation' => [
      [
        [
          '-0.729111431680356',
          '0.0594256444811486',
          '0.681810173707479',
          '39.567'
        ],
        [
          '0.655465249218677',
          '0.347216267656174',
          '0.670675905741077',
          '-16.445'
        ],
        [
          '-0.196880235828077',
          '0.935900345257398',
          '-0.292110794883319',
          '32.729'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi1'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.535371216409005',
          '0.354554744348916',
          '0.766595456483025',
          '0'
        ],
        [
          '-0.844616872102815',
          '0.224739063396967',
          '0.48591634335831',
          '-3.5527136788005e-15'
        ],
        [
          0,
          '-0.907625080439676',
          '0.419781744906649',
          '1.52681793282631'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi2'
        ]
      }, 'Symbolic' ),
      [
        [
          '-0.97616107219607',
          '0.0750973030140223',
          '0.203641734939179',
          '0'
        ],
        [
          '-0.217047370702846',
          '-0.337746841124208',
          '-0.915869810716349',
          '3.5527136788005e-15'
        ],
        [
          0,
          '-0.938236359554798',
          '0.345994990728711',
          '1.50094636812912'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi3'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.443092206324221',
          '-0.310634367537643',
          '-0.84093732608276',
          '0'
        ],
        [
          '0.896476043569896',
          '0.15353412760957',
          '0.415641642481157',
          '3.5527136788005e-15'
        ],
        [
          '-2.7148422399037e-16',
          '-0.938047739384119',
          '0.346506044155572',
          '1.5164910154696'
        ],
        [
          0,
          0,
          0,
          1
        ]
      ],
      bless( {
        'is_evaluated' => undef,
        'matrix' => sub {
            package AlterMolecule;
            use warnings;
            use strict;
            my($svar) = @_;
            return [[cos $svar, -sin($svar), 0, 0], [sin $svar, cos $svar, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
        },
        'symbols' => [
          'chi4'
        ]
      }, 'Symbolic' ),
      [
        [
          '0.0370184970980674'
        ],
        [
          '-0.161384796092291'
        ],
        [
          '3.9251080976787'
        ],
        [
          1
        ]
      ]
    ],
    'connections' => [
      '2175'
    ],
    'group_PDB' => 'ATOM',
    'hybridization' => 'sp3',
    'id' => '2189',
    'label_alt_id' => '.',
    'label_asym_id' => 'A',
    'label_atom_id' => 'HH22',
    'label_comp_id' => 'ARG',
    'label_entity_id' => '1',
    'label_seq_id' => '315',
    'occupancy' => '.',
    'occupancy_esd' => '.',
    'pdbx_PDB_ins_code' => '.',
    'pdbx_PDB_model_num' => '1',
    'pdbx_formal_charge' => '.',
    'type_symbol' => 'H'
  }
}
