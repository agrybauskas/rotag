#!/usr/bin/perl

use strict;
use warnings;

use lib "../../lib";
use Combinatorics qw( permutation );

#
# Unit test: Combinatorics::permutation
#
# Carries out permutation for array of arrays.
#
# Example: ./permutation example.dat
#

my ( $set_file ) = @ARGV;
my @angles = ( [] );

open( my $fh, "<", $set_file );
while( <$fh> ) {
    if( $_ =~ /^\n$/ ) {
	push( @angles, [] );
    } else {
	push( @{ $angles[-1] }, [ split( " ", $_ ) ] );
    }
}
close( $fh );

@angles = map { $_->[0] } @angles;

# Prints out all possible combinations of angles of list of sets.
my $permuted_list = permutation( 3, [], \@angles, [] );

print( join( " ", @{ $_ } ), "\n" ) for @{ $permuted_list }
