#!/usr/bin/perl

use strict;
use warnings;

use Math::Trig;

use lib "../../lib/perl";
use CifParser qw( obtain_atom_site );
use PseudoAtoms qw( generate_rotamer );
use SidechainModels qw( rotation_only );

use lib "../lib";
use Utils qw( select_atom_data );
use Data::Dumper;
my ( $resi_specifier, $angles, $cif_file ) = @ARGV;

# Selects atom's data for further analysis.
my $atom_site = obtain_atom_site( $cif_file );

# Parses angles for pseudo-rotamers.
my %angles = ( map { $_->[0] => $_->[1] }
	       map { [ split( " ", $_ ) ] }
	       split( "&", $angles ) );

# Calculates angles that will be rotated along.
my $pi = 4 * atan( 1, 1 );

# In Jmol, generates pseudo-atoms which represent positions of atom
# after rotation along dihedral angle.
open( my $fh, "<", $cif_file );
chomp( my @cif_lines = <$fh> );
close( $fh );

# Creates pseudo-atoms for given analytical equation that describes conformation
# of atom.
my $pseudo_rotamer =
    generate_rotamer( $atom_site,
		      { $resi_specifier => \%angles } );

# Prints out count of atoms and arbitrary word that are neccessary for Jmol.
print( scalar( keys %{ $pseudo_rotamer->{"data"} } ), "\n" );
print( "testing\n" );

# Prints out pseudo-atom coordinates.
for my $id ( sort { $a <=> $b } keys %{ $pseudo_rotamer->{"data"} } ) {
    printf( "$pseudo_rotamer->{\"data\"}{$id}{\"type_symbol\"}" .
	    "\t%.3f\t%.3f\t%.3f\n",
	    $pseudo_rotamer->{"data"}{$id}{"Cartn_x"},
	    $pseudo_rotamer->{"data"}{$id}{"Cartn_y"},
	    $pseudo_rotamer->{"data"}{$id}{"Cartn_z"} );
}
