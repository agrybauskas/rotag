#!/usr/bin/perl

use strict;
use warnings;

use lib "../../lib/perl";
use LinearAlgebra qw( flatten );
use Data::Dumper;
#
# Unit test: LinearAlgebra::flatten.
#
# Multiplies multiple matrices analytically.
#
# Example: ./flatten example.dat
#

my ( $matrix_file ) = @ARGV;

# Evaluates matrices.
my @matrices = ( [] );

open( my $fh, "<", $matrix_file );
while( <$fh> ) {
    if( $_ =~ /^\n$/ ) {
	push( @matrices, [] );
    } else {
	push( @{ $matrices[-1] }, [ split( " ", $_ ) ] );
    }
}
close( $fh );

my ( $element_list, $dimensions ) = flatten( \@matrices );

# First prints out list and then dimensions separated by whitespace.
print( join( " ", @{ $element_list } ), "\n" );
for( my $i = 0; $i < scalar( @{ $dimensions } ); $i += 2 ) {
    print( "$dimensions->[$i],$dimensions->[$i+1] " );
}
print( "\n" );
