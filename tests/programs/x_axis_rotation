#!/usr/bin/perl

use strict;
use warnings;

use lib "../../lib/perl";
use LinearAlgebra qw( x_axis_rotation matrix_product );

use lib "../lib";
use Utils qw( select_atom_data );

#
# Unit test: LinearAlgebra::rotate_x_axis.
#
# Rotates along x-axis of the global frame of reference.
#
# Example: ./rotate_x_axis "label_atom_id CA,N,CB,OG" \
#                          "Cartn_x,Cartn_y,Cartn_z" \
#                          "1.571" example.cif
#

my ( $attribute_filter, $attribute_select, $angle, $cif_file ) = @ARGV;

# Selects atom's data for further analysis.
my $selected_atom_data = select_atom_data( $attribute_filter,
					   $attribute_select,
					   $cif_file );

# Rotates all atoms along x-axis by given angle.
my @transf_atom_data;

foreach ( @$selected_atom_data ) {
    # Prepares atom coordinates to proper 4x1 matrix.
    my @atom_coord;

    foreach( @$_ ) {
	push( @atom_coord, [ $_ ] );
    }

    push( @atom_coord, [ 1 ] );

    # Makes actual rotation.
    push( @transf_atom_data,
	  matrix_product(
	      x_axis_rotation( $angle ),
	      \@atom_coord ) );
}

# Prints out results.
map { printf( "%.3f\t%.3f\t%.3f\n",
	      $_->[0][0],
	      $_->[1][0],
	      $_->[2][0] ) }
@transf_atom_data;
