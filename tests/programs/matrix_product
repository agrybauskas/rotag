#!/usr/bin/perl

use strict;
use warnings;

use lib "../../lib/perl";
use LinearAlgebra qw( evaluate_matrix matrix_product );

#
# Unit test: LinearAlgebra::matrix_product.
#
# Multiplies multiple matrices analytically.
#
# Example: ./matrix_product example.dat
#

my ( $variable_values, $matrix_file ) = @ARGV;

# Parses argument from argvar that describes values of the unknown variables.
my %variable_values = ( map { $_->[0] => $_->[1] }
			map { [ split( "=", $_ ) ] }
			split( ",", $variable_values ) );

# Evaluates matrices.
my @matrices = ( [] );

open( my $fh, "<", $matrix_file );
while( <$fh> ) {
    if( $_ =~ /^\n$/ ) {
	push( @matrices, [] );
    } else {
	push( @{ $matrices[-1] }, [ split( " ", $_ ) ] );
    }
}
close( $fh );

my $matrix_product = evaluate_matrix( matrix_product( @matrices ),
				      \%variable_values );

for my $row ( @{ $matrix_product } ) {
    print( join( "\t", @{ $row } ), "\n" );
}
