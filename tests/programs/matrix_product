#!/usr/bin/perl

use strict;
use warnings;

use lib "../../lib";
use LinearAlgebra qw( evaluate_matrix
                      matrix_product
                      mult_matrix_product );

#
# Unit test: LinearAlgebra::matrix_product.
#
# Multiplies multiple matrices analytically.
#
# Example: ./matrix_product example.dat
#

my ( $symbol_values, $matrix_file ) = @ARGV;

# Parses argument from argvar that describes values of the unknown variables.
my %symbol_values = ( map { $_->[0] => $_->[1] }
		      map { [ split( "=", $_ ) ] }
		      split( ",", $symbol_values ) );

# Evaluates matrices.
my @matrices = ( [] );

open( my $fh, "<", $matrix_file );
while( <$fh> ) {
    if( $_ =~ /^\n$/ ) {
	push( @matrices, [] );
    } else {
	push( @{ $matrices[-1] }, [ split( " ", $_ ) ] );
    }
}
close( $fh );
mult_matrix_product( \@matrices, \%symbol_values );
# my $matrix_product = mult_matrix_product( \@matrices, # \%symbol_values
#     );

# for my $row ( @{ $matrix_product } ) {
#     print( join( "\t", @{ $row } ), "\n" );
# }
