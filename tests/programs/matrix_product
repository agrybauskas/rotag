#!/usr/bin/perl

use strict;
use warnings;

use lib "../../lib/perl";
use LinearAlgebra qw( evaluate_matrix matrix_product );
use Data::Dumper;
#
# Unit test: LinearAlgebra::matrix_product.
#
# Multiplies multiple matrices using symbolic algebra.
#
# Example: ./matrix_product < example.dat
#

my $variable_values = shift;

# Parses argument from argvar that describes values of the unknown variables.
my %variable_values = ( map { $_->[0] => $_->[1] }
			map { [ split( "=", $_ ) ] }
			split( ",", $variable_values ) );

# Evaluates matrices.
my @matrices = ( [] );

while( <> ) {
    if( $_ =~ /^\n$/ ) {
	push( @matrices, [] );
    } else {
	push( @{ $matrices[-1] }, [ split( " ", $_ ) ] );
    }
}

my $matrix_product = evaluate_matrix( \%variable_values,
				      matrix_product( \@matrices ) );

foreach( @$matrix_product ) {
    print( join( "\t", @$_ ), "\n" );
}
