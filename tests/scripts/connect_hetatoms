#!/usr/bin/perl

use strict;
use warnings;

use ConnectAtoms qw( connect_hetatoms );
use ForceField::Parameters;

#
# Unit test: ConnectAtoms::connect_hetatoms
# Example: ./connect_hetatoms structure.dump struct-conn.du,p
#

my ( $pdbx_dump_file, $struct_conn_dump_file, $no_connection_list ) = @ARGV;

my $atom_site;
open( my $fh, "<", $pdbx_dump_file );
while( <$fh> ) {
    $atom_site .= "$_" ;
}
close( $fh );
$atom_site = eval( $atom_site );

my $struct_conn;
open( my $fh, "<", $struct_conn_dump_file );
while( <$fh> ) {
    $struct_conn .= "$_" ;
}
close( $fh );
$struct_conn = eval( $struct_conn );

my $parameters = Parameters->new();

connect_hetatoms( $parameters, $atom_site,
                  { 'struct_conn' => $struct_conn,
                    'no_connection_list' => $no_connection_list } );

my @atom_coord;
my @parent_atom;
my @child_atom;

for my $parent_id ( keys %{ $atom_site } ) {
    @parent_atom = ( $parent_id, $atom_site->{$parent_id}{"label_atom_id"} );
    for my $child_id ( @{ $atom_site->{$parent_id}{"connections"} } ) {
        @child_atom = ( $child_id, $atom_site->{$child_id}{"label_atom_id"} );
        print( "$parent_atom[0] $parent_atom[1]:" );
        print( "$child_atom[0] $child_atom[1]\n" );
    }
}
