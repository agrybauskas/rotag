#!/usr/bin/perl

use strict;
use warnings;

use Multiprocessing qw( divide_arrays_into_blocks );

#
# Unit test: Multiprocessing::divide_arrays_into_blocks.
# Example: ./divide_arrays_into_blocks vector.dat
#

my ( $vector_file, $threads ) = @ARGV;

# Evaluates matrices.
my @vectors = ( [] );
open( my $fh, "<", $vector_file );
while( <$fh> ) {
    if( $_ =~ /^\n$/ ) {
        push( @vectors, [] );
    } else {
        push( @{ $vectors[-1] }, [ split( " ", $_ ) ] );
    }
}
close( $fh );

my $array_blocks = divide_arrays_into_blocks( $vectors[0], $threads );

for my $block_id ( 0..$#{ $array_blocks } ) {
    for my $row ( @{ $array_blocks->[$block_id] } ) {
        print( join( " ", @{ $row } ), "\n" );
    }
    print( "\n" ) if $block_id != $#{ $array_blocks };
}
