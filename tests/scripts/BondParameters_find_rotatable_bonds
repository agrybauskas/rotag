#!/usr/bin/perl

use strict;
use warnings;

use BondParameters;
use ForceField::Parameters;

#
# Unit test: BondParameters->find_rotatable_bonds()
# Example: ./BondParameters_find_rotatable_bonds structure.dump
#

my ( $pdbx_dump_file ) = @ARGV;

my $atom_site;
open( my $fh, "<", $pdbx_dump_file );
while( <$fh> ) {
    $atom_site .= "$_" ;
}
close( $fh );
$atom_site = eval( $atom_site );

my $PARAMETERS = Parameters->new();
my $bond_parameters = BondParameters->new( $PARAMETERS, $atom_site );

$bond_parameters->find_rotatable_bonds();
# my $rotatable_bonds = $bond_parameters->get_rotatable_bonds;

# for my $atom_id ( sort { $a cmp $b } keys %{ $rotatable_bonds }  ) {
#     print( "$atom_site->{$atom_id}{\"label_atom_id\"}: "  );
#     for my $angle ( @{ $bond_parameters->get_rotatable_bond_ordered_names( $atom_id ) } ) {
#         my $first_atom_id =
#             $bond_parameters->get_rotatable_bond_atom_ids( $atom_id, $angle )->[1];
#         my $second_atom_id =
#             $bond_parameters->get_rotatable_bond_atom_ids( $atom_id, $angle )->[2];
#         print( "$atom_site->{$first_atom_id}{\"label_atom_id\"}," .
#                "$atom_site->{$second_atom_id}{\"label_atom_id\"} " );
#     }
#     print( "\n" );
# }
