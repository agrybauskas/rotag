#!/usr/bin/perl

use strict;
use warnings;

use LinearAlgebra qw( mult_matrix_product );

#
# Unit test: LinearAlgebra::matrix_product.
# Example: ./matrix_product "x=3,t=2" matrices.dat
#

my ( $symbol_values, $matrix_file ) = @ARGV;

# Parses argument from argvar that describes values of the unknown variables.
my %symbol_values = ( map { $_->[0] => $_->[1] }
		      map { [ split( "=", $_ ) ] }
		      split( ",", $symbol_values ) );

# Evaluates matrices.
my @matrices = ( [] );
open( my $fh, "<", $matrix_file );
while( <$fh> ) {
    if( $_ =~ /^\n$/ ) {
	push( @matrices, [] );
    } else {
	push( @{ $matrices[-1] }, [ split( " ", $_ ) ] );
    }
}
close( $fh );

my $matrix_product =
    mult_matrix_product( mult_matrix_product( \@matrices ), \%symbol_values );
for my $matrix_id ( 0..$#{ $matrix_product } ) {
    for my $row ( @{ $matrix_product->[$matrix_id] } ) {
	print( join( "\t", @{ $row } ), "\n" );
    }
    print( "\n" ) if $matrix_id != $#{ $matrix_product };
}
