#!/usr/bin/perl

use strict;
use warnings;

use ConnectAtoms qw( assign_hetatoms );
use ForceField::Parameters;

#
# Unit test: ConnectAtoms::assign_hetatoms
# Example: ./assign_hetatoms structure-and-struct-conn.dump 0 0 1
#

my ( $pdbx_struct_conn_dump_file, $do_bond_stretching, $do_angle_bending,
     $do_bond_rotation ) = @ARGV;

my $pdbx_struct_conn;
open( my $fh, "<", $pdbx_struct_conn_dump_file );
while( <$fh> ) {
    $pdbx_struct_conn .= "$_" ;
}
close( $fh );
$pdbx_struct_conn = eval( $pdbx_struct_conn );

my $parameters = Parameters->new();
my $atom_site = $pdbx_struct_conn->{'_atom_site'};
my $struct_conn = $pdbx_struct_conn->{'_struct_conn'};

assign_hetatoms( $parameters, $atom_site, $struct_conn );

my @atom_coord;
my @parent_atom;
my @child_atom;

for my $parent_id ( keys %{ $atom_site } ) {
    @parent_atom = ( $parent_id, $atom_site->{$parent_id}{"label_atom_id"} );
    for my $child_id ( @{ $atom_site->{$parent_id}{"connections_hetatom"} } ) {
        @child_atom = ( $child_id, $atom_site->{$child_id}{"label_atom_id"} );
        print( "$parent_atom[0] $parent_atom[1]:" );
        print( "$child_atom[0] $child_atom[1]\n" );
    }
}
