#!/usr/bin/perl

use strict;
use warnings;

use ForceField::NonBonded qw( hard_sphere );
use ForceField::Parameters;
use PDBxParser qw( filter
                   to_pdbx );
use PseudoAtoms qw( calc_favourable_angles );
use Sampling qw( sample_angles_qs_parsing );

my ( $residue_id,
     $residue_chain,
     $pdbx_model,
     $residue_alt,
     $angles,
     $potential,
     $interaction_specifier,
     $pdbx_dump_file ) = @ARGV;

my $atom_site;
open( my $fh, "<", $pdbx_dump_file );
while( <$fh> ) {
    $atom_site .= "$_" ;
}
close( $fh );
$atom_site = eval( $atom_site );

my $PARAMETERS = Parameters->new();
my $PI = $PARAMETERS->{'_[local]_constants'}{'pi'};
my $SIG_FIGS_MIN = $PARAMETERS->{'_[local]_constants'}{'sig_figs_min'};

$angles =~ s/\s//g;
$angles = sample_angles_qs_parsing( $angles, undef, undef, $PARAMETERS );

my %interaction_specifier = ( map { $_->[0] => [ split( ",", @$_[1] ) ] }
                              map { [ split( " ", $_ ) ] }
                              split( "&", $interaction_specifier ) );
my $interaction_site = filter( { 'atom_site' => $atom_site,
                                 'include' => \%interaction_specifier } );

my $favourable_angles =
    calc_favourable_angles( { 'atom_site' => $atom_site,
                              'residue_unique_key' =>
                                  "${residue_id},${residue_chain},".
                                  "${pdbx_model},${residue_alt}",
                              'interaction_site' => $interaction_site,
                              'angles' => $angles,
                              'non_bonded_potential' => \&hard_sphere,
                              'threads' => 1,
                              'PARAMETERS' => $PARAMETERS,
                            } );

my $angle_id = 1;
for my $angles ( @{ $favourable_angles } ) {
    my @angle_names = map { "chi${_}" } 1..$#{ $angles }+1;
    for my $i ( 0..$#{ $angles } ) {
        print $angle_id, ', ', $angle_names[$i], ', ',
            sprintf( $SIG_FIGS_MIN, 180 * $angles->[$i] / $PI ), "\n";
    }
    $angle_id++;
}
