#!/usr/bin/perl

use strict;
use warnings;

use BondParameters qw( collect_bond_lengths
                       stretchable_bonds );
use ForceField::Parameters;

#
# Unit test: collect_bond_lengths()
# Example: ./collect_bond_lengths structure.dump
#

my ( $pdbx_dump_file, $include_mainchain ) = @ARGV;

my $atom_site;
open( my $fh, "<", $pdbx_dump_file );
while( <$fh> ) {
    $atom_site .= "$_" ;
}
close( $fh );
$atom_site = eval( $atom_site );

my $parameters = Parameters->new();
my $pi = $parameters->{'_[local]_constants'}{'pi'};

stretchable_bonds( $parameters, $atom_site,
                   { 'include_mainchain' => $include_mainchain } );

my $bond_lengths = collect_bond_lengths( $atom_site );
for my $residue_unique_key ( sort keys %{ $bond_lengths } ) {
    for my $bond_name ( sort { $a cmp $b }
                        keys %{ $bond_lengths->{$residue_unique_key} } ) {
        print( join( " ", split( ",", $residue_unique_key ), $bond_name ), " " );
        printf( "%.3f\n",
                $bond_lengths->{$residue_unique_key}{$bond_name}{'value'} );
    }
}
