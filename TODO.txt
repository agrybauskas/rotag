++ Add new PDBxParser::filter option so, it could return also the order of
   selection.
++ Combined residue id, chain and PDB model num could be unique identifier for
   _[local]_ cif, because residue ids are not unique by themselves.
++ Decide how to handle dihedral angle calculations on residues without
   rotatable bonds.
++ Make rotamers show properly in Jmol by assigning label_alt_id different
   labels.
++ Maybe rotag-select could filter also by residue or atom ids, because when
   parsing files and using pipes some of the [local] data might be lost or not
   needed.
++ Order maybe should be changed to group only.
++ Should properly track the quantity of significant digits.
++ Should use lambda function instead of eval in LinearAlgebra.pm.
!! Write two functions determining configuration hierarchy: R or S (for sp3) and
   cis (Z) or trans (E) (for sp2).
++ Should have basic and most necessary attributes for PDBx and transfer them.
   However, should have option to carry everything through pipes.
++ Because sidechains grow when calculating energy, there might be no information
   about transformed next atom. One of the solutions might be to have one more
   rule - calculate when H is present. Another one - make second step
   calculations they might be also necessary for intramolecular clashes.
++ around_distance(), connect_atoms(), generate_library() and rotag_energy have
   very similar interation through cells. It should be refactored and the
   redundant code also should be removed.
-- Create functions that generate rotamer_energy and rotamer_angle cif loops.
++ rotag_energy should have pairwise and rotamer/residue flags.
++ Partial charges and full charges probably should be described for each
   residue.
++ pi and the constants that are being generated during the calculations should
   be generated during the build. This way calculation will only occur once.
++ Make proline also rotatable, but by adding a point (atom) that the last
   side-chain atom should be connected to would also produce rotamers. It should
   be done before calculating energies.
++ There should be a check of must attributes in CIF.
++ Add option to use only implicit hydrogen bond model for composite energy
   potential.
++ Add 0 value energy to rotag_energy.
++ Parameter control should be added to rotag_energy for debugging.
-- Should decide, how to change alt id for original atom after pseudo atom is
   generated. Should it be kept to '.'? Or changed to match pattern in CIF?
++ Add additional sp2 hybridization test where it checks if the atoms are in
   one plane.
++ Basic connectivity for 20 amino acids should be checked by looking at table
   or Perl data structure.
++ Add pre-defined hybridizations for 20 amino acids.
-- Make sort by attribute in filter().
++ Have to deal with defaults of force fields. Might be good to store them into
   one file.
++ Add capability to turn not only by angle, but also by ratio in rotag_library.
-- Check if vector lengths when adding hydrogens all are 1.0.
++ Add debug checks on the absence of connection, conformation, hybridization
   and certain parameters for interaction functions.
++ Generalize atom_site data structure, because it can be used even with other
   types of data.
++ Add option to mutate with given dihedral angle.
!! 'label_alt_id' probably should be used only when main-chain has one.
++ Optimize AtomSite::filter().
++ Analyze only heavy atoms.
++ Add mainchain angle calculations for rotag_dihedral script.
++ random-seed option is not working properly in rotag_select.
++ Maybe should add capability to select residues according to their main-chain
   and side-chain dihedral angles.
-- around_distance() and grid_box() functions should isolated different alt-ids.
!! Figure out how heteroatoms should be treated when the part of them are
   selected and included in iteraction sites.
++ Add group assignment keyword to the grammar.
-- Generate mainchain atoms with specified dihedral angles. It will be useful
   for inverstigating impact of mainchain conformation to sidechains.
-- Add Monte Carlo and specified angle range sampling in rotag_scan.
++ Expand token should be added that growth of selection by one amino-acid would
   be useful when determining mainchain dihedral angles.
-- Changing filter() to filter_new() it decreased speed of rotag_library by two
   times. Find out why and fix it, because having two similar functions is
   tedious.
-- Should use stack model instead of storing every angle combination in RAM -
   potentially can crash the system if the number of angles are very small.
++ If there are too many chi angles than there are possible in the structure,
   there are angle reapeats. The redundant angles should be removed.
++ Moved part of the code that deals with choosing right rotamers to
   new rotag_library script.
-- Change amino-acid dump files, because they contain too much information and
   some tests are not properly performed, such as connect_atoms().
!! Make sure that only pdbx_PDB_model_num and label_alt_id are used to isolate
   calculations.
++ Fix wrong pairwise interaction display in rotag_energy.
++ Reduce the quantity of calculations by reducing the number of potential angles
   for those amino acids that have more than one symmetry: arginine (chi4),
   aspartic acid (chi2), glutamic acid (chi3), phenylalanine (chi2) and tyrosine
   (chi2).
++ Around token must accomodate floats.
-- Add possibility to select specific rotamers to add.
-- Check how groups behave when '&&' operators are introduced:
   '1:atomname OG && altid 1'.
++ It would be nice to have rotag_rmsd option to show only one line for each
   unique residue pair.
++ Look if ids are not repeating in rotag_rmsd -S output.
-- to_csv() should also parse indexed data.
++ It looks that raw2indexed() and indexed2raw() should be functions that
   only deal with references. That way conversions are more convenient.
-- Tidy up the pdbx data structure by introducing 'related_data' instead of
   using related_category_data() all the time.
-- Think what to do with rotag_dihedral output when the dihedral atoms are not
   properly selected.
-- Check if the order of selections in 'rotag_select -t' option produces
   different speeds. If yes, then order such way that it would be optimal.
++ Unify rotag_scan, rotag_mutate and rotag_energy selection and parameter
   formats. It could be something like this: '<selection>:<action>'. An example,
   'group 5: chi1=0.0'.
-- Have to make sure that if no connections are determined, it should be tried
   to be implied from atom distances.
++ Error and warning messages should point out filenames in all rotag scripts.
++ There are errors when both '.' and integer 'altid' are used in 'rotag_select'.
!! There should be something done if no solutions are found. Maybe the angle
   should be decreased automatically and recalculated.
-- Have a possibility to include parameter files.
