#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;

use PDBxParser qw( obtain_atom_site );

#*rotag_split
#*    splits PDBx into smaller ones according to the specified attribute or
#*    attributes.
#*
#*USAGE:
#*    rotag_split --input input.cif --by 'resid' --basename 'output'
#*    rotag_split --input input.cif --by 'resid,chain'
#*
#*OPTIONS:
#*    --input <file> | <stdin>
#*        PDBx file.
#*    --by <str>
#*        attribute or attributes that will split PDBx into multiple files.
#*        Available attributes:
#*            atomid    - atom id number    (_atom_site.id);
#*            atomname  - atom name         (_atom_site.label_atom_id);
#*            atomtype  - atom symbol       (_atom_site.type_symbol);
#*            resid     - residue id number (_atom_site.label_seq_id);
#*            resname   - residue name      (_atom_site.label_comp_id);
#*            chain     - chain name        (_atom_site.label_asym_id);
#*            alt       - disorder          (_atom_site.label_alt_id);
#*            entity    - entity id         (_atom_site.label_entity_id);
#*            group     - selection group   (_atom_site.[local]_selection_group).
#*    --basename
#*        basename of the output file.
#*    --version
#*        print version.

# --------------------------------- Options ----------------------------------- #

my %options;

my $version = "1.0.0";

GetOptions(
    "input=s" => \$options{"pdbx_file"},
    "by=s" => \$options{"split_by"},
    "basename=s" => \$options{"basename"},
    "help" => sub { open( my $fh, "<", $0 );
                    while( <$fh> ) {
                        my ( $help_message ) = $_ =~ m/^#(\*.*)/;
                        $help_message =~ s/^\*$/ /g if $help_message;
                        $help_message =~ s/^\*//g if $help_message;
                        print( $help_message, "\n" ) if $help_message; }
                    close( $fh );
                    exit; },
    "version" => sub { print $version, "\n";
                       exit; } )
    or die "Error in command line argument.";

# Defaults.
$options{"split_by"} //= "entity";

# ----------------------------------- Main ------------------------------------ #

# Reads file path, stdin and "-" operator.
my $atom_site;
if( $options{"pdbx_file"} ) {
    $atom_site = obtain_atom_site( $options{"pdbx_file"} );
} elsif( ! defined $options{"pdbx_file"} && ! -t STDIN ) {
    $atom_site = obtain_atom_site( '-' );
} else {
    die( "Use command \"rotag_split --help\" in order to see the manual.\n" );
}

# Splits PDBx.
my @split_by = map { split( " ", $_ ) }
               split( ",", $options{"split_by"} );

# # Prints out the PDBx.
# to_pdbx( { "atom_site" => $atom_site,
#            $pdbx_loops ? ( "pdbx_loops", $pdbx_loops) : "",
#            "add_atom_attributes" => [ "[local]_selection_state",
#                                       "[local]_selection_group" ] } );
