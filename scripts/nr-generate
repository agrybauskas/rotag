#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;

use PDBxParser qw( obtain_atom_site );

#*nr-generate
#*    generates rotamer library.
#*
#*USAGE:
#*    nr-generate ...
#*
#*OPTIONS:
#*    -i, --input, <STDIN>
#*        PDBx file.
#*    -h, --help
#*        prints out help message.

# --------------------------------- Options ----------------------------------- #

my $pdbx_file;
my $help = 0;

GetOptions( "input=s" => \$pdbx_file,
	    "help" => sub { open( my $fh, "<", $0 );
			    while( <$fh> ) {
				my ( $help_message ) = $_ =~ m/^#(\*.*)/;
				$help_message =~ s/^\*$/ /g if $help_message;
				$help_message =~ s/^\*//g if $help_message;
				print( $help_message, "\n" ) if $help_message; }
			    close( $fh ) } )
    or die "Error in command line argument.";

# ----------------------------------- Main ------------------------------------ #

# Reads file path, stdin and "-" operator;
my $atom_site;
if( $pdbx_file ) {
    $atom_site = obtain_atom_site( $pdbx_file );
} elsif( ! defined $pdbx_file ) {
    $atom_site = obtain_atom_site( '-' );
}
