#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;

use PDBxParser qw( obtain_atom_site );
use Grammar::CommandLineParser;

#*nr-generate
#*    generates rotamer library.
#*
#*USAGE:
#*    nr-generate -i input.cif > output.cif
#*
#*OPTIONS:
#*    -i, --input <file> | <stdin>
#*        PDBx file.
#*    -s, --select <str>
#*        commands describing the selection of atoms.
#*        Selection keywords (equivalent PDBx category data items in parentheses):
#*            resid - residue id number (_atom_site.label_seq_id);
#*            resname - residue name    (_atom_site.label_comp_id);
#*            atoid - atom id number    (_atom_site.id);
#*            atoname - atom name       (_atom_site.label_atom_id);
#*    -v, --version
#*        prints out version.
#*    -h, --help
#*        prints out help message.

# --------------------------------- Options ----------------------------------- #

my %options;

my $version = "1.0.0";

GetOptions(
    "input=s" => \$options{"pdbx_file"},
    "select=s" => \$options{"command_line_arg"},
    "help" => sub { open( my $fh, "<", $0 );
		    while( <$fh> ) {
			my ( $help_message ) = $_ =~ m/^#(\*.*)/;
			$help_message =~ s/^\*$/ /g if $help_message;
			$help_message =~ s/^\*//g if $help_message;
			print( $help_message, "\n" ) if $help_message; }
		    close( $fh );
		    exit; },
    "version" => sub { print $version, "\n";
		       exit; } )
    or die "Error in command line argument.";

# ----------------------------------- Main ------------------------------------ #

# Reads file path, stdin and "-" operator.
my $atom_site;
if( $options{"pdbx_file"} ) {
    $atom_site = obtain_atom_site( $options{"pdbx_file"} );
} elsif( ! defined $options{"pdbx_file"} && ! -t STDIN ) {
    $atom_site = obtain_atom_site( '-' );
} else {
    die( "Use command \"nr-generate --help\" in order to see the manual.\n" );
}

# Parses command line argument to select certain atoms in PDBx.
my $command_line_parser = new CommandLineParser();
my $selected_atom_site =
    $command_line_parser->parser( $options{"command_line_arg"}, $atom_site );
