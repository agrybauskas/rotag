package Constants;

use strict;
use warnings;

use Exporter qw( import );
our @EXPORT_OK = qw( $EPSILON
                     $EDGE_LENGTH_CONNECTION
                     $EDGE_LENGTH_INTERACTION
                     $PI
                     $SIG_FIGS_MIN
                     $SIG_FIGS_MAX
                     $SP3_ANGLE
                     $SP3_ANGLE_ERR
                     $SP2_ANGLE
                     $SP2_ANGLE_ERR
                     $SP_ANGLE
                     $SP_ANGLE_ERR );

use List::Util qw( max );

use ForceField::Parameters;

# ---------------------------- General constants ------------------------------ #

our $EPSILON = @EPSILON@;
our $PI = @PI@;
our $SIG_FIGS_MIN = '%.3f';
our $SIG_FIGS_MAX = '%.6f';

# ----------------------------- Angle constants ------------------------------- #

our $SP3_ANGLE = 109.5 * $PI / 180.0;
our $SP2_ANGLE = 120.0 * $PI / 180.0;
our $SP_ANGLE  = $PI;
our $SP3_ANGLE_ERR = 5 * $PI / 180.0; #
our $SP2_ANGLE_ERR = 5 * $PI / 180.0; # TODO: check for more accurate values.
our $SP_ANGLE_ERR  = 5 * $PI / 180.0; #

# ------------------------------ Grid constants ------------------------------- #

our $EDGE_LENGTH_CONNECTION =
    max( map { @{ $Parameters::ATOMS{$_}{'covalent_radius'}{'length'} } }
             keys %Parameters::ATOMS ) * 2;
our $EDGE_LENGTH_INTERACTION =
    7 * $Parameters::ATOMS{'C'}{'covalent_radius'}{'length'}->[0] +
    2 * $Parameters::ATOMS{'N'}{'covalent_radius'}{'length'}->[0] +
    3 * $Parameters::ATOMS{'C'}{'covalent_radius'}{'length'}->[1] +
    3 * $Parameters::ATOMS{'N'}{'covalent_radius'}{'length'}->[1] +
        $Parameters::ATOMS{'H'}{'covalent_radius'}{'length'}->[0];

1;
